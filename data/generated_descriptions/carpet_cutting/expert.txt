name: 2D Rectangular Cutting Stock Problem

description: The 2D Rectangular Cutting Stock Problem is a classic problem in operations research and computer science. It involves cutting a set of rectangles from a larger rectangular roll of material, such as wood or metal, to minimize waste. Each rectangle has a specific size and offset, and can be rotated by 90 degrees. The goal is to find the optimal placement of the rectangles on the roll to minimize the total length of the roll used.

variables: x[i], y[i], rot[i], l, kind[i]

* x[i] and y[i] are the coordinates of the top-left corner of room i on the roll.
* rot[i] is the rotation of room i (0, 90, 180, or 270 degrees).
* l is the total length of the roll used.
* kind[i] is the shape of room i (1, 2, 3, or 4).

constraints: 
forall(i in ROOM)(shape[i,rot[i]] != {}),
forall(i in ROOM)(forall(r in ROFF)(r in shape[i,rot[i]] -> x[i] + d[r,1] + d[r,3] <= l /\ y[i] + d[r,2] + d[r,4] <= h)),
forall(i,j in ROOM where i < j)(forall(r1,r2 in ROFF)(r1 in shape[i,rot[i]] /\ r2 in shape[j,rot[j]] -> x[i] + d[r1,1] + d[r1,3] <= x[j] + d[r2,1] \/ x[j] + d[r2,1] + d[r2,3] <= x[i] + d[r1,1] \/ y[i] + d[r1,2] + d[r1,4] <= y[j] + d[r2,2] \/ y[j] + d[r2,2] + d[r2,4] <= y[i] + d[r1,2])),
geost_bb(2, rect_size, rect_offset, shapes, coords, kind, [0,0], [l,h]),
kind[i] in {1,2,3,4}

* The first constraint ensures that each room has a non-empty shape.
* The second constraint ensures that each rectangle in a room does not exceed the roll's length and height.
* The third constraint ensures that no two rooms overlap.
* The fourth constraint is a geometric constraint that ensures the rectangles are placed correctly on the roll.
* The fifth constraint ensures that each room has a valid shape.

objective: minimize l